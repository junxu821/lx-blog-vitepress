import{_ as t,c as e,o as p,a5 as a}from"./chunks/framework.DhzKnR-G.js";const S=JSON.parse('{"title":"JS继承","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/js/JS继承.md","filePath":"frontend/js/JS继承.md"}'),s={name:"frontend/js/JS继承.md"},n=a('<h1 id="js继承" tabindex="-1">JS继承 <a class="header-anchor" href="#js继承" aria-label="Permalink to &quot;JS继承&quot;">​</a></h1><p>1.【原型链继承】 不能向父构造函数传参</p><p>Child.prototype=new Parent();</p><p>2.【构造函数继承】 不能访问原型链</p><p>Parent.call(this)</p><p>3.【组合式继承】</p><p>4.【寄生组合式继承】</p><p>5.【class继承】</p><p>class Child extends Parent</p><p></p><p>6.call、apply、bind</p><p>改变this指向</p><p>【call】参数一个一个传入</p><p>【apply】参数作为数组整体传入</p><p>【bind】执行后返回一个新函数，新函数this指向新对象，再向向新函数传参</p>',15),o=[n];function r(_,c,l,d,i,h){return p(),e("div",null,o)}const m=t(s,[["render",r]]);export{S as __pageData,m as default};
