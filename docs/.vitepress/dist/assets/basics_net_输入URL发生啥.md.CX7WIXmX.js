import{_ as e,c as p,o as t,a5 as a}from"./chunks/framework.DhzKnR-G.js";const R=JSON.parse('{"title":"一个页面从输入 URL 到页面加载显示完成，这个过程中都发生了什么？","description":"","frontmatter":{},"headers":[],"relativePath":"basics/net/输入URL发生啥.md","filePath":"basics/net/输入URL发生啥.md"}'),_={name:"basics/net/输入URL发生啥.md"},s=a('<h1 id="一个页面从输入-url-到页面加载显示完成-这个过程中都发生了什么" tabindex="-1">一个页面从输入 URL 到页面加载显示完成，这个过程中都发生了什么？ <a class="header-anchor" href="#一个页面从输入-url-到页面加载显示完成-这个过程中都发生了什么" aria-label="Permalink to &quot;一个页面从输入 URL 到页面加载显示完成，这个过程中都发生了什么？&quot;">​</a></h1><p>分为 4 个步骤：</p><p>（1），当发开一个 URL 请求时，不管这个 URL 是 Web 页面的 URL 还是 Web 页面上每个资源的 URL，浏览器都会开启一个线程来处理这个请求，同时在远程 DNS 服务器上启动一个 DNS</p><p>查询。这能使浏览器获得请求对应的 IP 地址。</p><p>（2）， 浏览器与远程`Web`服务器通过`TCP`三次握手协商来建立一个`TCP/IP`连接。</p><p>该握手包括一个同步报文，一个同步-应答报文和一个应答报文，这三个报文在 浏览器和服务器</p><p>之间传递。该握手首先由客户端尝试建立起通信，而后服务器应答并接受客户端的请求，最后由</p><p>客户端发出该请求已经被接受的报文。</p><p>（3），一旦`TCP/IP`连接建立，浏览器会通过该连接向远程服务器发开`HTTP`的`GET`</p><p>请求。远程服务器找到资源并使用 HTTP 响应返回该资源，值为 200 的 HTTP 响应状态表示一</p><p>个正确的响应。</p><p>（4），此时，`Web`服务器提供资源服务，客户端开始下载资源。</p><p>请求返回后，便进入了我们关注的前端模块</p><p>简单来说，浏览器会解析`HTML`生成`DOM Tree`，其次会根据 CSS 生成 CSS Rule Tree，</p><p>而`javascript`又可以根据`DOM API`操作`DOM`</p>',15),r=[s];function o(c,n,i,T,d,l){return t(),p("div",null,r)}const L=e(_,[["render",o]]);export{R as __pageData,L as default};
