import{_ as e,c as a,o as t,a5 as r}from"./chunks/framework.Baw4MH5z.js";const f=JSON.parse('{"title":"异步加载和延迟加载","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/js/异步加载和延迟加载.md","filePath":"frontend/js/异步加载和延迟加载.md"}'),p={name:"frontend/js/异步加载和延迟加载.md"},o=r('<h1 id="异步加载和延迟加载" tabindex="-1">异步加载和延迟加载 <a class="header-anchor" href="#异步加载和延迟加载" aria-label="Permalink to &quot;异步加载和延迟加载&quot;">​</a></h1><p>1.异步加载的方案： 动态插入 script 标签</p><p>2.通过 ajax 去获取 js 代码，然后通过 eval 执行</p><p>3.script 标签上添加 defer 或者 async 属性4.创建并插入 iframe，让它异步执行 js</p><p>5.延迟加载：有些 js 代码并不是页面初始化的时候就立刻需要的，而稍后的某些情况才需要</p><p>的。</p><h1 id="ie各版本和-chrome可以并行下载多少个资源" tabindex="-1">ie各版本和 chrome可以并行下载多少个资源 <a class="header-anchor" href="#ie各版本和-chrome可以并行下载多少个资源" aria-label="Permalink to &quot;ie各版本和 chrome可以并行下载多少个资源&quot;">​</a></h1><p>IE6 两个并发，iE7 升级之后的 6 个并发，之后版本也是 6 个</p><p>Firefox，chrome 也是 6 个</p><p>Flash、Ajax 各自的优缺点，在使用中如何取舍？</p><p>• Flash 适合处理多媒体、矢量图形、访问机器；对 CSS、处理文本</p><p>上不足，不容易被搜索。</p><p>-Ajax 对 CSS、文本支持很好，支持搜索；多媒体、矢量图形、机器访问</p><p>不足。</p><p>• 共同点：与服务器的无刷新传递消息、用户离线和在线状态、操</p><p>作 DOM</p>',16),s=[o];function _(c,n,i,d,h,l){return t(),a("div",null,s)}const j=e(p,[["render",_]]);export{f as __pageData,j as default};
