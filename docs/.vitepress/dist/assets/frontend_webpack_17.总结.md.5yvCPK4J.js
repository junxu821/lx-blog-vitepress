import{_ as e,c as a,o as l,a5 as i}from"./chunks/framework.Baw4MH5z.js";const b=JSON.parse('{"title":"17.总结","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/webpack/17.总结.md","filePath":"frontend/webpack/17.总结.md"}'),t={name:"frontend/webpack/17.总结.md"},o=i('<h1 id="_17-总结" tabindex="-1">17.总结 <a class="header-anchor" href="#_17-总结" aria-label="Permalink to &quot;17.总结&quot;">​</a></h1><h2 id="_1-两种开发模式" tabindex="-1">1. 两种开发模式 <a class="header-anchor" href="#_1-两种开发模式" aria-label="Permalink to &quot;1. 两种开发模式&quot;">​</a></h2><ul><li>开发模式：代码能编译自动化运行</li><li>生产模式：代码编译优化输出</li></ul><h2 id="_2-webpack-基本功能" tabindex="-1">2. Webpack 基本功能 <a class="header-anchor" href="#_2-webpack-基本功能" aria-label="Permalink to &quot;2. Webpack 基本功能&quot;">​</a></h2><ul><li>开发模式：可以编译 ES Module 语法</li><li>生产模式：可以编译 ES Module 语法，压缩 js 代码</li></ul><h2 id="_3-webpack-配置文件" tabindex="-1">3. Webpack 配置文件 <a class="header-anchor" href="#_3-webpack-配置文件" aria-label="Permalink to &quot;3. Webpack 配置文件&quot;">​</a></h2><ul><li>5 个核心概念</li><li>entry</li><li>output</li><li>loader</li><li>plugins</li><li>mode* devServer 配置</li></ul><h2 id="_4-webpack-脚本指令用法" tabindex="-1">4. Webpack 脚本指令用法 <a class="header-anchor" href="#_4-webpack-脚本指令用法" aria-label="Permalink to &quot;4. Webpack 脚本指令用法&quot;">​</a></h2><ul><li><code>webpack</code> 直接打包输出</li><li><code>webpack serve</code> 启动开发服务器，内存编译打包没有输出</li></ul>',9),r=[o];function c(n,_,d,s,h,p){return l(),a("div",null,r)}const k=e(t,[["render",c]]);export{b as __pageData,k as default};
