import{_ as e,c as n,o as d,a5 as l}from"./chunks/framework.Baw4MH5z.js";const h=JSON.parse('{"title":"null和 undefined的区别？","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/js/null和undefined的区别.md","filePath":"frontend/js/null和undefined的区别.md"}'),a={name:"frontend/js/null和undefined的区别.md"},i=l('<h1 id="null和-undefined的区别" tabindex="-1">null和 undefined的区别？ <a class="header-anchor" href="#null和-undefined的区别" aria-label="Permalink to &quot;null和 undefined的区别？&quot;">​</a></h1><ul><li><p>null 是一个表示”无”的对象，转为数值时为 0；</p></li><li><p>undefined 是一个表示”无”的原始值，转为数值时为 NaN。</p></li><li><p>当声明的变量还未被初始化时，变量的默认值为 undefined。</p></li><li><p>null 用来表示尚未存在的对象，常用来表示函数企图返回一个不存在的对象。</p></li></ul><h1 id="undefined-表示-缺少值-就是此处应该有一个值-但是还没有定义。典型用法是" tabindex="-1">undefined 表示”缺少值”，就是此处应该有一个值，但是还没有定义。典型用法是： <a class="header-anchor" href="#undefined-表示-缺少值-就是此处应该有一个值-但是还没有定义。典型用法是" aria-label="Permalink to &quot;undefined 表示”缺少值”，就是此处应该有一个值，但是还没有定义。典型用法是：&quot;">​</a></h1><p>（1）变量被声明了，但没有赋值时，就等于 undefined。（2) 调用函数时，应该提供的参数没有提供，该参数等于 undefined。</p><p>（3）对象没有赋值的属性，该属性的值为 undefined。</p><p>（4）函数没有返回值时，默认返回 undefined。</p><h1 id="null-表示-没有对象-即该处不应该有值。典型用法是" tabindex="-1">null 表示”没有对象”，即该处不应该有值。典型用法是： <a class="header-anchor" href="#null-表示-没有对象-即该处不应该有值。典型用法是" aria-label="Permalink to &quot;null 表示”没有对象”，即该处不应该有值。典型用法是：&quot;">​</a></h1><p>（1） 作为函数的参数，表示该函数的参数不是对象。</p><p>（2） 作为对象原型链的终点。</p>',9),t=[i];function u(o,r,f,_,s,p){return d(),n("div",null,t)}const m=e(a,[["render",u]]);export{h as __pageData,m as default};
